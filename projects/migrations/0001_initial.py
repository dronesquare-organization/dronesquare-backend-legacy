# Generated by Django 3.1.10 on 2021-06-24 15:49

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import projects.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AnomalyDegree',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='이슈 정도 아이디')),
                ('types', models.JSONField(default=projects.models.anomalyType_default_value, verbose_name='이슈 정도')),
            ],
            options={
                'verbose_name': '이슈 정도',
                'verbose_name_plural': '이슈 정도들',
                'db_table': 'anomaly_degree',
            },
        ),
        migrations.CreateModel(
            name='AnomalyTypes',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='이슈 타입 아이디')),
                ('types', models.JSONField(default=projects.models.anomalyType_default_value, verbose_name='이슈 타입')),
            ],
            options={
                'verbose_name': '이슈 타입',
                'verbose_name_plural': '이슈 타입들',
                'db_table': 'anomaly_types',
            },
        ),
        migrations.CreateModel(
            name='DataProcess',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='데이터가공 아이디')),
                ('processStatus', models.CharField(blank=True, choices=[('처리전', '처리전'), ('접수중', '접수중'), ('진행중', '진행중'), ('처리완료', '처리완료'), ('보완요구', '보완요구')], db_column='process_Status', default='처리전', max_length=50, null=True, verbose_name='데이터 프로세스 처리 상태값')),
                ('applyProcess', models.DateTimeField(auto_now_add=True, db_column='apply_data_process', null=True, verbose_name='데이터 프로세스 신청 날짜')),
                ('completedProcess', models.DateTimeField(blank=True, db_column='completed_data_process', null=True, verbose_name='데이터 프로세스 완료 날짜')),
                ('notice', models.TextField(blank=True, default='', null=True, verbose_name='알림 메모')),
                ('quality_low', models.IntegerField(blank=True, default=0, null=True, verbose_name='low 퀄리티 시간')),
                ('quality_high', models.IntegerField(blank=True, default=0, null=True, verbose_name='high 퀄리티 시간')),
                ('quality_mid', models.IntegerField(blank=True, default=0, null=True, verbose_name='mid 퀄리티 시간')),
                ('quality', models.CharField(blank=True, max_length=50, null=True, verbose_name='선택된 퀄리티')),
                ('gsd', models.FloatField(default=0, verbose_name='gsd')),
                ('mosaicResolution', models.FloatField(default=0, verbose_name='정사영상 해상도')),
                ('pointDensity', models.IntegerField(default=0, verbose_name='점밀도')),
                ('precision_x', models.FloatField(default=0, verbose_name='x축 정밀도')),
                ('precision_y', models.FloatField(default=0, verbose_name='y축 정밀도')),
                ('precision_z', models.FloatField(default=0, verbose_name='z축 정밀도')),
                ('precision_rmse', models.FloatField(default=0, verbose_name='RMSE')),
                ('coordinateSystem', models.CharField(blank=True, choices=[('EPSG:4326', 'EPSG:4326'), ('EPSG:32652', 'EPSG:32652'), ('EPSG:32651', 'EPSG:32651'), ('EPSG:5186', 'EPSG:5186'), ('EPSG:5187', 'EPSG:5187')], db_column='coordinate_system', default='EPSG:4326', max_length=200, null=True, verbose_name='좌표 체계')),
                ('admin_download', models.BooleanField(default=False, verbose_name='관리자 다운로드')),
                ('admin_upload', models.BooleanField(default=False, verbose_name='관리자 업로드')),
                ('processOption', models.CharField(blank=True, default='', max_length=50, null=True, verbose_name='프로세스 옵션')),
                ('request_memo', models.TextField(blank=True, default='', null=True, verbose_name='요청 사항')),
            ],
            options={
                'verbose_name': '데이터 가공',
                'verbose_name_plural': '데이터 가공',
                'db_table': 'dataprocess',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='DataProcessFile',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='데이터가공 파일 아이디')),
                ('name', models.CharField(max_length=200, verbose_name='파일 이름')),
                ('format', models.CharField(max_length=10, verbose_name='포맷')),
                ('created', models.DateTimeField(verbose_name='파일 생성 일자')),
                ('size', models.IntegerField(verbose_name='파일 크기')),
                ('fileDir', models.CharField(blank=True, max_length=400, null=True, verbose_name='피일 경로')),
                ('fileType', models.CharField(max_length=100, verbose_name='데이터 가공 파일 종류')),
            ],
            options={
                'verbose_name': '데이터 가공 파일첨부',
                'verbose_name_plural': '데이터 가공 파일첨부',
                'db_table': 'dataprocess_file',
                'ordering': ['created'],
            },
        ),
        migrations.CreateModel(
            name='Projects',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False, verbose_name='프로젝트 아이디')),
                ('areaName', models.CharField(db_column='area_name', max_length=200, verbose_name='지역 이름')),
                ('assetName', models.CharField(db_column='asset_name', max_length=200, verbose_name='구조물 이름')),
                ('assetType', models.CharField(choices=[('일반 객체', '일반 객체'), ('코리더(Corridor) 객체', '코리더(Corridor) 객체'), ('면 객체', '면 객체'), ('수직 객체', '수직 객체'), ('기타', '기타')], db_column='asset_type', default='기타', max_length=200, verbose_name='인프라 타입')),
                ('projectName', models.CharField(db_column='name', max_length=200, verbose_name='지역 이름')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='프로젝트 생성 일자')),
                ('modified', models.DateTimeField(auto_now=True, verbose_name='프로젝트 수정 일자')),
                ('coordinateSystem', models.CharField(db_column='coordinate_system', default='EPSG:4326', max_length=200, verbose_name='좌표 체계')),
                ('shared', models.BooleanField(blank=True, default=False, null=True, verbose_name='공유 여부')),
                ('imgCnt', models.IntegerField(db_column='img_cnt', default=0, verbose_name='이미지 수')),
                ('comment', models.TextField(blank=True, null=True, verbose_name='프로젝트에 대한 코멘트')),
                ('location', django.contrib.gis.db.models.fields.PointField(srid=4326, verbose_name='프로젝트 위치')),
                ('uploading', models.CharField(choices=[('처리전', '처리전'), ('진행중', '진행중'), ('완료', '완료')], default='처리전', max_length=50, verbose_name='업로딩 여부')),
                ('imgVolume', models.BigIntegerField(default=0, verbose_name='프로젝트 이미지 용량')),
                ('videoVolume', models.BigIntegerField(default=0, verbose_name='프로젝트 비디오 용량')),
                ('etcVolume', models.BigIntegerField(default=0, verbose_name='프로젝트 기타 파일 용량')),
                ('pcdVolume', models.BigIntegerField(default=0, verbose_name='프로젝트 포인트 클라우드 용량')),
                ('mosaicVolume', models.BigIntegerField(default=0, verbose_name='프로젝트 모자익 용량')),
                ('meshVolume', models.BigIntegerField(default=0, verbose_name='프로젝트 메쉬 용량')),
                ('img_created', models.DateTimeField(blank=True, null=True, verbose_name='이미지 생성 시간')),
                ('area', models.FloatField(default=0, verbose_name='프로젝트 면적')),
                ('issueCnt', models.IntegerField(default=0, verbose_name='총 이슈 개수')),
                ('timeSeriesCnt', models.IntegerField(default=0, verbose_name='시계열 연계 개수')),
                ('isRtk', models.BooleanField(default=False, verbose_name='RTK 유무')),
                ('duplicate_rate', models.FloatField(default=0, verbose_name='중복도')),
                ('duplicate_std', models.FloatField(default=0, verbose_name='중복도 편차')),
            ],
            options={
                'verbose_name': '프로젝트',
                'verbose_name_plural': '프로젝트',
                'db_table': 'projects',
                'ordering': ['-id'],
            },
        ),
    ]
